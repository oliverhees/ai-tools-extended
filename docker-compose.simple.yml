version: '3.8'

services:
  app:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -c "
        apt-get update && apt-get install -y curl wget ffmpeg git &&
        pip install fastapi uvicorn python-multipart yt-dlp openai-whisper pydub requests python-dotenv &&
        mkdir -p /app/media /app/cache /tmp &&
        python3 -c \"
        from fastapi import FastAPI
        import uvicorn
        app = FastAPI(title='AI Tools Extended')
        @app.get('/')
        def root(): return {'message': 'AI Tools Extended', 'status': 'running'}
        @app.get('/health')
        def health(): return {'status': 'healthy'}
        @app.get('/api/')
        def api(): return {'message': 'API Ready'}
        @app.get('/youtube/')
        def youtube(): return {'message': 'YouTube Ready'}
        if __name__ == '__main__': uvicorn.run(app, host='0.0.0.0', port=8000)
        \"
      "
    environment:
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
      - TTS_ENGINE=${TTS_ENGINE:-kokoro}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-500MB}
      - MAX_VIDEO_DURATION=${MAX_VIDEO_DURATION:-600}
      - ENABLE_CACHE=${ENABLE_CACHE:-true}
      - NODE_ENV=production
    volumes:
      - ai_tools_media:/app/media
      - ai_tools_cache:/app/cache
      - ai_tools_temp:/tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "coolify.managed=true"
      - "coolify.type=service"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "coolify.managed=true"
      - "coolify.type=service"
      - "coolify.main=true"

volumes:
  ai_tools_media:
    driver: local
  ai_tools_cache:
    driver: local
  ai_tools_temp:
    driver: local

networks:
  default:
    name: ai-tools-network
    driver: bridge